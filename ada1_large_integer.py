# -*- coding: utf-8 -*-
"""ADA1 Large Integer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WkYiWQ9xGD8XHIKGWH7BIoWONBwB0ypw
"""

def karatsuba(num1,num2):
  if len(str(num1))==1 or len(str(num2))==1:
    return num1*num2
  n1=len(str(num1))
  n2=len(str(num2))
  m=min(n1,n2)
  x2=num1%(10**(m//2))
  x1=(num1)//(10**(m//2))
  y2=num2%(10**(m//2))
  y1=(num2)//(10**(m//2))
  ac=karatsuba(x1,y1)
  bd=karatsuba(x2,y2)
  adbc=karatsuba((x1+x2),(y1+y2))-ac-bd
  return ((ac*(10**(2*(m//2))))+((adbc)*(10**(m//2)))+bd)
if __name__=="__main__":
  num1=int(input('Enter 1st number'))
  num2=int(input('Enter 2nd number'))
  print("multilpication of two numbers is:")
  print(karatsuba(num1,num2))

"""
Space complexity = O(log n) for recursion stack
Intermediate storage is O(1) for each level of recursion
Time = O(n raised to log3) = n raised to 1.585
a=3 number of recursive calls
b=2 subproblem size is n/2
"""