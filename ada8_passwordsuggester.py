# -*- coding: utf-8 -*-
"""ADA8_PasswordSuggester.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ABLaO4J1t9RlRW6QX_PmuaqNDLv3ukbs
"""

import random

def insert(s, pos, ch):
    return s[:pos] + ch + s[pos:]

def add_char(s, need):

    pos = 0
    low_case = "abcdefghijklmnopqrstuvwxyz"

    for i in range(need):
        pos = random.randint(0, len(s))
        s = insert(s, pos, low_case[random.randint(0, 25)])
    return s

def suggester(l, u, d, s, st):

    num = '0123456789'
    low_case = "abcdefghijklmnopqrstuvwxyz"
    up_case = low_case.upper()
    spl_char = '@#$_()!^&*'

    if l == 0:
        pos = random.randint(0, len(st))
        st = insert(st, pos, low_case[random.randint(0, 25)])

    if u == 0:
        pos = random.randint(0, len(st))
        st = insert(st, pos, up_case[random.randint(0, 25)])

    if d == 0:
        pos = random.randint(0, len(st))
        st = insert(st, pos, num[random.randint(0, 9)])

    if s == 0:
        pos = random.randint(0, len(st))
        st = insert(st, pos, spl_char[random.randint(0, len(spl_char)-1)])

    return st

def gen_password(n, p):

    l = u = d = s = 0
    strength = "Very Weak"

    # Check password composition
    for char in p:

        if char.islower():
            l = 1
        elif char.isupper():
            u = 1
        elif char.isdigit():
            d = 1
        elif char in '@#$_()!^&*':
            s = 1

    # Classify password strength
    if (l + u + d + s) == 4 and n >= 8:
        strength = "Strong"

    elif (l + u + d + s) >= 3 and n >= 6:
        strength = "Moderate"

    elif (l + u + d + s) >= 2 and n >= 4:
        strength = "Weak"

    else:
        strength = "Very Weak"

    print(f"Your password is classified as: {strength}")

    # Suggest stronger passwords if not already strong
    if strength != "Strong":
        print("\nSuggested Passwords:")

        for _ in range(5):
            suggest = suggester(l, u, d, s, p)
            need = max(0, 8 - len(suggest))  # Ensure minimum length of 8

            if need > 0:
                suggest = add_char(suggest, need)

            print(suggest)


# Take user input
password = input("Enter a password: ")
gen_password(len(password), password)

"""
Time & Space : O(n)
where n = length of password
"""